# Release 0
def iteration_method
  puts "status message before"
  yield
  yield
  yield
  puts "status message after"
end
iteration_method { puts "status message during" }
# Release 1
array = ["backback", "radio", "laptop", "books", "lamp"]
hash = {
  backpack: "green",
  radio: "gray",
  laptop: "silver",
  books: "multi",
  lamp: "bronze"
}
puts "Before the iteration:"
p array
p hash
array.each do |room_item|
  p room_item
end
hash.each do |room_item, color|
  puts room_item.to_s + " is " + color
end
puts "After the iteration"
p array
p hash
puts "Before the iteration:"
p array
array.map! do |room_item|
  "super " + room_item
end
puts "After the iteration:"
p array
# Release 2
last_name_array = ["Johnson", "Smith", "Reed", "Frank"]
last_name_array.delete_if { |last_name| last_name.include?("S") }
numbers_array = [1, 12, 23, 34, 45, 56]
numbers_array.keep_if { |number| number > 25 }
last_name_array = ["Johnson", "Smith", "Reed", "Frank"]
last_name_array.select { |last_name| last_name.include?("n") }
last_name_array = ["Johnson", "Smith", "Reed", "Frank"]
last_name_array.drop_while { |last_name| last_name.include?("n") }
hash = {
  "backpack" => "green",
  "radio" => "gray",
  "laptop" => "silver",
  "books" => "multi",
  "lamp" => "bronze"
}
hash.delete_if { |room_item, color| room_item.include?("o") }
hash = {
  backpack: "green",
  radio: "gray",
  laptop: "silver",
  books: "multi",
  lamp: "bronze"
}
hash.keep_if { |room_item, color| color.length > 4 }
hash = {
  backpack: "green",
  radio: "gray",
  laptop: "silver",
  books: "multi",
  lamp: "bronze"
}
hash.select { |room_item, color| room_item == "lamp" }
hash = {
  backpack: "green",
  radio: "gray",
  laptop: "silver",
  books: "multi",
  lamp: "bronze"
}
hash.flatten.drop_while { |hash_name| hash_name.to_s.include?("a") }